#ifndef HAL_CONSTANTS_TIMER_H
#define HAL_CONSTANTS_TIMER_H

#define TIMER_MODE_STOPPED  0
#define TIMER_MODE_PERIODIC 1
#define TIMER_MODE_COUNTING 2
#define TIMER_MODE_UPDOWN   3

typedef enum {
    _TIMER_MODE_STOPPED  = TIMER_MODE_STOPPED, 
    _TIMER_MODE_PERIODIC = TIMER_MODE_PERIODIC, 
    _TIMER_MODE_COUNTING = TIMER_MODE_COUNTING, 
    _TIMER_MODE_UPDOWN   = TIMER_MODE_UPDOWN,
} TIMER_MODE_t;

#define TIMER_OUTMODE_NONE      0  // No Output
#define TIMER_OUTMODE_PWM       1  // Reset/Set
#define TIMER_OUTMODE_NPWM      2  // Set/Reset
#define TIMER_OUTMODE_TOGGLE    3  // Toggle, NotImplemented

typedef enum {
    _TIMER_OUTMODE_NONE    = TIMER_OUTMODE_NONE,
    _TIMER_OUTMODE_PWM     = TIMER_OUTMODE_PWM,   
    _TIMER_OUTMODE_NPWM    = TIMER_OUTMODE_NPWM,
    _TIMER_OUTMODE_TOGGLE  = TIMER_OUTMODE_TOGGLE,
} TIMER_OUTMODE_t;


#define TIMER_WIDTH_8B          1
#define TIMER_WIDTH_16B         2
#define TIMER_WIDTH_32B         4

typedef enum {
    _TIMER_WIDTH_8B  = TIMER_WIDTH_8B,
    _TIMER_WIDTH_16B = TIMER_WIDTH_16B,
    _TIMER_WIDTH_32B = TIMER_WIDTH_32B,
} TIMER_WIDTH_t;

#define TIMER_COUNTER_TYPE_UP       0
#define TIMER_COUNTER_TYPE_UPDOWN   1

typedef enum {
    _TIMER_COUNTER_TYPE_UP = TIMER_COUNTER_TYPE_UP,
    _TIMER_COUNTER_TYPE_UPDOWN = TIMER_COUNTER_TYPE_UPDOWN,
} TIMER_COUNTER_TYPE_t;

#endif
